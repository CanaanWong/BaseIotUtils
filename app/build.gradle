apply plugin: 'com.android.application'
// 热更新依赖插件脚本
//apply from: 'tinker-support.gradle'

android {

    signingConfigs {
        release {
            storeFile file('D:\\face.jks')
            storePassword 'facefuture'
            keyPassword 'facefuture'
            keyAlias = 'key0'
        }
        debug {
            storeFile file('D:\\face.jks')
            storePassword 'facefuture'
            keyAlias = 'key0'
            keyPassword 'facefuture'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' , 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        signingConfig signingConfigs.release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
            minifyEnabled = false
        }
    }
    // recommend
    dexOptions {
        //预编译
        preDexLibraries = false
    }

    //忽略一些异常提示
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    //配置自定义打包名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "BaseIotUtils_"+"v${variant.mergedFlavor.versionName}_"+new Date().format("yyyy-MM-dd")+"_release.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "BaseIotUitls_"+"v${variant.mergedFlavor.versionName}_"+new Date().format("yyyy-MM-dd")+"_debug.apk"
            }
            outputFileName = fileName;
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //support
    testImplementation rootProject.ext.support["junit"]
    androidTestImplementation rootProject.ext.support["runner"]
    androidTestImplementation rootProject.ext.support["espresso"]
    api rootProject.ext.support["appcompat-v7"]
    implementation rootProject.ext.support["constraint-layout"]
    //bugly
    //api rootProject.ext.dependencies["crashreport_upgrade"]
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    //api rootProject.ext.dependencies["hotrefresh"]
    //物联网开发基础工具类
    //api rootProject.ext.dependencies["base_iotutils"]
    //socke client
    api rootProject.ext.dependencies["base_socket"]
    api rootProject.ext.dependencies["rxpermissions"]
    api rootProject.ext.dependencies["nativecrashreport"]
    //socket client
    //api rootProject.ext.dependencies["socket-client"]
    //findByView butterknife
    implementation rootProject.ext.dependencies["butterknife"]
    //内存泄漏查看工具
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    implementation project(path: ':base_iotutils')
    implementation 'com.android.support:support-annotations:28.0.0'
    //implementation rootProject.ext.support["annotations"]
    //implementation project(path: ':base_socket')
}
